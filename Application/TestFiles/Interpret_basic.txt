# Przykład pliku źródłowego 

int nwd(int a, int b)
{
    if(a==b)
    {
        return a;
    }

    if (a > b)
    {
        return nwd(a-b, b); # wywołania rekurencyjne
    }

    return nwd(b-a, a);
}

int factorial(int a)
{
    if(a == 1)
        return 1;

    return a * factorial(a-1);
}

void main()
{	
    int x = 100;
    int y = 30;
    int z = 5;
    # int z = 15;

    print( 10 + 20 );

    print("nwd (", x, ", ", y, ") = ", nwd(x, y)); 
    print("Silnia ", z, " wynosi = ", factorial(z));  # Silnia 3 = 6

    var cad = 20 CAD;
    var usd = cad to USD;

    int i;

    while(i < 10)
    {
        print("i = ", i);
        i = i + 1;
    }

    print("USD: ", usd, "\n");

    var test1 = Account<USD>();
    var test2 = Account<USD>(500);
    var test3 = test2.Copy();

    print("Account test1 = ", test1.Ballance, " ", test1.Currency);
    print("Account test2 = ", test2.Ballance, " ", test2.Currency);
    print("Account test3 = ", test3.Ballance, " ", test3.Currency, "\n");
    
    test1.Ballance = 2000D;
    test2.Ballance = 5000D;
    test3.Ballance = 22D;

    print("Account test1 = ", test1.Ballance, " ", test1.Currency);
    print("Account test2 after change = ", test2.Ballance, " ", test2.Currency);
    print("Account test3 = ", test3.Ballance, " ", test3.Currency, "\n");

    test1 << 1 USD;
    test1 >> 1000 EUR >> test3;

    print("Account test1 = ", test1.Ballance, " ", test1.Currency);
    print("Account test2 after change = ", test2.Ballance, " ", test2.Currency);
    print("Account test3 = ", test3.Ballance, " ", test3.Currency, "\n");


    var accounts = Collection< Account<USD> >();

    # Dodawanie
    accounts.Add(test1);
    accounts.Add(test2);

    var account = accounts[1];
    print("accounts[1] = ", account.Ballance, " ", account.Currency);

    accounts.Delete(0);
    account = accounts[0];
    print("accounts[0] = ", account.Ballance, " ", account.Currency);

    accounts.Add(test1);
    accounts.Add(test2);
    accounts.Add(test3);
    accounts.Add(test1);

    var found = accounts.First(lambda Account x => {
        return x.Ballance > 10000D;
    });

    if(found != null)
    {
        print("found = ", account.Ballance, " ", account.Currency);
    }
    else
    {
        print("found = none");
    }

    var foundItems = accounts.Where(lambda Account x => x.Ballance > 1000D);

    int j = 1;
    foreach(Account<USD> acc in foundItems)
    {
        print(j, ". found = ", acc.Ballance, " ", acc.Currency);
        j = j + 1;
    }

    # Zero division error example
    # print(10/0);

    # Zero division error example
    # int m = 100000 * 100000 ;

    # Null reference error exception example
    Account<USD> nulltest;
    # nulltest.Ballance;

    # Index out of range exception example
    Collection< int > ints = Collection< int >();
    ints.Add(2);
    ints.Add(3);
    # print(ints[2]);

}
